/*******************************************************************************
 * The MIT License (MIT)
 *
 * Convection calculator app
 * Copyright (C) 2017 Luis F. Cardona S.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package co.edu.itm.www.convectioncalculator;

public class SsatSimpleState extends SimpleState {
  private transient long swigCPtr;

  protected SsatSimpleState(long cPtr, boolean cMemoryOwn) {
    super(CoolPropJNI.SsatSimpleState_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SsatSimpleState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        CoolPropJNI.delete_SsatSimpleState(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void setExists(SsatSimpleState.SsatSimpleStateEnum value) {
    CoolPropJNI.SsatSimpleState_exists_set(swigCPtr, this, value.swigValue());
  }

  public SsatSimpleState.SsatSimpleStateEnum getExists() {
    return SsatSimpleState.SsatSimpleStateEnum.swigToEnum(CoolPropJNI.SsatSimpleState_exists_get(swigCPtr, this));
  }

  public SsatSimpleState() {
    this(CoolPropJNI.new_SsatSimpleState(), true);
  }

  public final static class SsatSimpleStateEnum {
    public final static SsatSimpleState.SsatSimpleStateEnum SSAT_MAX_NOT_SET = new SsatSimpleState.SsatSimpleStateEnum("SSAT_MAX_NOT_SET", CoolPropJNI.SsatSimpleState_SSAT_MAX_NOT_SET_get());
    public final static SsatSimpleState.SsatSimpleStateEnum SSAT_MAX_DOESNT_EXIST = new SsatSimpleState.SsatSimpleStateEnum("SSAT_MAX_DOESNT_EXIST");
    public final static SsatSimpleState.SsatSimpleStateEnum SSAT_MAX_DOES_EXIST = new SsatSimpleState.SsatSimpleStateEnum("SSAT_MAX_DOES_EXIST");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static SsatSimpleStateEnum swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + SsatSimpleStateEnum.class + " with value " + swigValue);
    }

    private SsatSimpleStateEnum(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private SsatSimpleStateEnum(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private SsatSimpleStateEnum(String swigName, SsatSimpleStateEnum swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static SsatSimpleStateEnum[] swigValues = { SSAT_MAX_NOT_SET, SSAT_MAX_DOESNT_EXIST, SSAT_MAX_DOES_EXIST };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
